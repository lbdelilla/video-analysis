 Transcripción:    Le voy a grabar. Exacto. Ahí está. Buenas tardes. ¿Qué tal? Ya, ¿cómo están todos? Ya les preguntamos, ¿han estado todo practicando? ¿Pudieron avanzar un poquito en esto, hacer sus componentes, segunda clase de React? Vale, ¿qué voy a hacer ahora? Voy a hacer un componente fer. Bien, vengo acá. Eh, esto es donde habíamos quedado la clase anterior. Nuevo componente. Bien. Eh, foder. Jsx. Vale, voy a crear el componente. Okay, entonces aquí voy a recurrir a la ayuda de Giovanni. ¿Cómo comienzo este componente? ¿Qué escribo acá? Vale, vamos a poner así, uno por ahora. Okay. Acá, ¿qué qué pongo? Dime, ¿estás muteado, Joan? Eso. Ahí va. Bien. Export, que es el CCO cons. Sí. Y footer foter igual paréntesis función flecha. Eh, dentro de la función cons. Sí. Eh, vale, vamos a poner así. Así lo hacemos rápido. Acá code. Ahí hay un error. Eh, a propósito lo hice. A ver, ¿quién me lo quién me levanta la mano y ya lo va corrigiendo? Acá me diría Giovanni que voy con el retour. Bien. Y por ahora vamos a poner esto y vamos a poner un deep eh punto container. Vale. ¡Epa! Un minutito. Container. Uy, que está lento esto. Ahí está. Container. Dámelo. Okay. Y acá le pondré. Vale. Dime, Arturo, ¿cuál es mi error? Nada, que el componente no estaba en mayúscula. Correcto. El componente no está en mayúscula. Bien, lo vamos a poner en mayúscula. En un momento le voy a mostrar qué sucede si no lo ponemos en mayúscula, ¿vale? No va a funcionar, pero bueno, allí lo tenemos en mayúscula, tenemos un dip. Esto sería retornamos, retornamos un HTML. Okay, listo. Tengo 1 5 y 2 y acá le voy a poner todavía tres y cuatro hasta que en algún momento ya dejaré escribir esos comentarios, pero hasta que se acostumbran, ¿vale? Bueno, lo voy a utilizar en el home. Valentina, ¿qué hago en el home para ver ese foder acá? E añadirlo, añadir un tag. ¿Cómo añado un tag? Exacto. Eh, mayor fer. Lo espero y allá me está ya me está señalando esto. Vale, que lo puedo importar. Recuerden, lo tenemos que cerrar y verificar de que esté importado. Okay, con esto me debería ver ahí está chiquitito al fondo. Fuder, no sé si lo ven. Foder. Esto es lo que dice. Vale. Bueno, ahora voy a poner este párrafo dentro del foder porque en realidad eso es lo que quiero. Para eso lo hice. Bien, quiero copiar esto. Control X y esto me lo llevo a mi componente Fooder, que lo pondré acá. Vale, le vamos a hacer este algunas algunas cosillas más. Made with acá que nos quedó el 50. Okay. Eh, vamos a hacer así. Eh, 100. Esta es la ocho, ¿verdad? La 108. Okay. Y esto lo voy a poner hecho con acá. Hab un corazón, creo. Eh, for ta ta eh para la corte, ¿vale? Y ahí vamos a poner esto. S108. Bien, cómo se va viendo para la corte. Okay. Coma. Héctor, Héctor y Álvaro para la corte 108. Creo que ahí terminó. Vale, ahí está mi par, ahí está mi foder. Vale, listo. Nada del otro mundo, pero estamos. Bueno, ahora resulta que ya se está visualizando bien. Eh, acá vamos a poner, a ver, vamos a poner un HR. Un HR. Bien, fíjense en cómo lo pone. Se cierra el componente. Eso me está poniendo esa lineita que está allí abajo, ¿vale? El HR. Para que esto se vea un poquito mejor, lo voy a ocultar. Voy a ocultar las cartas, bien, las comento y ahí se va a ver el foder, bien, que está abajo del botón subscribe. Vale, allí tenemos un pequeño problemita que es que está, ¿vale? Eh, se nos fue el fer para arriba, no queda el final de la página. Bien, entonces les voy a dar, les envié hace ratito por por este por el chat les enví enlace donde tengo un algo que tiene que ver con la solución de eso, un artículo, etcétera, que encontré por allí, pero básicamente es tengo que poner al DIP que contiene todo bien estas clases. Deflex, ¿vale? Diflex col min BH 100 V, perdón, VH1, ¿vale? Y dentro del componente Foder, esta clase MT Auto. Bien, entonces voy a hacer esto. Estoy eh aquí con este es mi primer DIP, ¿okay? Que ya tiene un text center. Entonces acá deflex, ¿vale? Eh, dicolum era, uy, no me acuerdo. Vale, pero acá era mm, vale, que no me acuerdo. Vamos a copiar este flex column y min BH1. Okay. Acá es flex. Flex. Y acá es min eh VH 100, ¿vale? Al 100. Ahí vamos. Ahora esto no funciona si en el componente foder. Miren lo que me está haciendo. ¿Y por qué este botón está tan así? Okay. Diflex flex column min BH. Okay. Vamos a ver. Bueno, el tema es que acá también tengo que poner bien un MT auto y ahí está. Mi foder queda siempre pegado al final, por más que tenga un componente chiquitito. Bien, el buton quedó enorme. Vamos a ver qué tiene este buton. Mm, vale, que no tiene nada, por eso está tomando todo el ancho. Entonces, esto lo voy a tener que poner dentro de un un deep call. A ver. Vale, lo vamos a dejar así porque no es no es el objetivo de la clase hoy solucionar esto. Vale, pero vale, ya me quedó eso con que no lo no me queda bien el botón, no importa. Vamos al hom este tip para el foder. Okay, ahí les envié el enlace. son unas clases porque luego si reniegan tanto con esto y es ese es el el truquillo. Bien, bueno, vamos a ver otra cosa. En la clase anterior sí les nombré y les dije que este card, bien que voy a mostrar acá la etiqueta del componente card, yo estaba generando cuatro card, una abajo de otra, ¿vale? Primera card. Acá vamos a hacer un un dip. Segunda card y tercera card. ¿Vale? Bueno, quiero mostrarles una forma, ¿vale? Una forma, luego hay otras, ¿vale? Una forma de cómo tener un solo componente y enviarle los datos para que lo complete, porque básicamente son iguales, ¿verdad? En estructura. ¿Qué está cambiando? De hecho, acá no cambia, en estas dos no cambia nada, solamente la la imagen. Acá está cambiando el nombre, la descripción y y bueno, y la imagen también. ¿Vale? Entonces, ¿qué es lo que puedo hacer yo acá? Existe algo. Bien, y esto lo voy a modificar. Me quiero Sí, me voy a guardar la imagen. Person URL. Bueno, ahí tengo person. Eh, acá, a ver, a ver, a ver. Eso está. Esto lo voy a sacar. Vamos a sacar estas dos. Estas dos las saco. Vamos a dejar solamente una. Bien. Eh, creo que hay un dip. Está bien. Vale, estoy dejando una. Esta es mi card. Bien. Por ahora con ese ancho y estoy nada. Acá no hay nada. Está todo. Esto está inclusive en eh vale, está en fijo y acá tengo este párrafo. Vale, vamos a ver. Yo quiero mostrarle, le voy a mostrar el primer ejemplo con un componente más chiquitito. Luego vamos a modificarle acá. Así que voy a hacer otro componente. Le voy a poner subtitle, ¿vale? Punto jx. Vale, vamos a venir acá y esto de vuelta le pondría uno. Y acá voy a poner export const eh subtitle. Bien, es igual a una función flecha Java. ¿Qué tengo dentro de esto? Retur, ¿vale? Paréntesis. Y acá vamos a hacer este un deep container, ¿vale? Y dentro de él vamos a hacer un HD3, ¿bien? Eh, solamente. Y dentro del H3 vamos a poner subtítulo. ¿Vale? Listo, tengo mi componente. Lo voy a mostrar allí abajo de React en home devuelto voy a ocultar esta card, así no nos ocupa tanto, no pasa nada. Abajo del spinner. Bien, acá voy a mostrar el subtitle. No me sigan, eh, por ahora no me sigan. Ya van a tener este código, no se preocupen. Quiero que vean qué es lo que sucede. Eh, quedó. Ah, quedó, quedó arriba. Vale, lo bajo. Ahí está. Ahí va a estar al lado abajo de la Vamos a dejar así. Bien, está abajo de de intro react. Bien. Vamos a poner un dos. Así. Vale. Bueno, ¿qué es lo que quiero mostrarles yo ahora? Un poquito. Dijimos que esto es parecido o es como si fuera un tag HTML, ¿verdad? Los tag HTMLs tienen atributos, como en este caso tiene el class name. Entonces, yo acá puedo puedo definirlo, crear un atributo, decirle text es igual. Bien. Y le vamos a poner este intro tour react. Acá vamos a poner plus dos, ¿vale? Eso que estoy teniendo allí como atributo lo puedo tomar en mi componente subtítulo. ¿Dónde lo voy a tomar? Acá, props. Okay, estoy tomando un esto, ¿qué sería? Un parámetro. Lo recibo allí y lo voy a mostrar acá. Bien, cómo es. algo que tiene que ver con JavaScript. Voy a poner las llaves y voy a mostrar props punto y el eh nombre que le puse, que creo que le puse text. Vamos a ver si le puse text. Sí, le puse text. Vale, entonces me está reemplazando en el H3 el valor que estoy enviando en las props. ¿Vale? ¿Qué es las? ¿Qué son las props? ¿Qué tipo de dato creen ustedes que es? A ver, ¿quién se anima a sugerir un tipo de datos? Lo vamos a ver en consola. Bien, pero ¿quién se anima ya por la sintaxis que es utilizado? Ya deberían poder responderme esto, ¿vale? ¿Qué tipo de dato puede ser props? un string, un número, un array, un objeto, un buleano, un objeto. Un objeto, exacto, un objeto. ¿Por qué? Por la sintaxis. Bien, punto text. Pero lo vamos a ver en consola. Bien. Inspeccionar en la consola. Wow. Eh, acá está objeto class dos. Vamos a borrar todo esto. Okay. Y lo voy a refrescar de vuelta. Que me lo me lo muestre de vuelta. Bien. Objeto. CL. ¿Y qué clave tiene? Texto. ¿Cuál es el valor de texto? Class 2. Bien, con ese pequeño concepto en el home voy a definir otro componente. Voy a llamarlo de vuelta porque lo puedo llamar cuántas veces quiera. Subtitle. Vale. Y le diré que text es igual. Vale, acá, perdón, vamos a cerrarlo así no da tanto error. Y acá le diré que text va a ser igual a otro subtítulo. Bien. Y acá va a aparecer otro subtítulo. Vale, siempre y cuando le mande esto va a estar bien, va a funcionar. Le puedo mandar otro atributo. Sí. Le puedo mandar un atributo color. Bien, igual. Y acá le pondré eh DCH. Vale, resulta que si yo vengo a la consola, vale, voy a borrar de vuelta todo, ¿vale? Vamos a ver acá. Okay, fíjense que ahí está llegando. Vale, vamos a agrandar esto un poquito. ¿Lo ven? Llega el objeto props. Tiene color y tiene text. y lo está mostrando dos veces, bueno, cuatro veces en realidad, pero acá también. Acá solamente tiene textos. Vale, ¿qué puedo hacer con ese danger? Ya se están imaginando. A ver, ¿quién me dice qué puedo hacer con eso? No hace falta que me diga cómo, qué es lo que puedo hacer con eso, con ese color. Cambiar la clase, entiendo, ¿no? Cambiar la clase, cambiarle el color y para eso tenemos que cambiar la clase. Muy bien, Fernando. Pero quiero cambiarle el color del texto y para eso le vamos a aplicar un acá a este H3 le diremos, okay, class name, ¿bien? Y dentro de este class name, ¿qué le diremos? Vale, si quiero cambiar la clase, ya tengo que y sé que esto viene de una variable, ya tengo que poner mi JavaScript y mi template literal. Bien, ¿por qué? Porque esto, ¿qué va a ser? Va a ser text y acá ya tengo que poner el dólar, las llaves, ¿vale? Y dentro props punto color. Entonces me va a quedar text danger. Vale, preguntas hasta acá. ¿Y qué pasó con class? Siguió en siguió en negro. Bueno, ¿por qué sigo en negro? Porque seguramente, y lo voy a mostrar, tiene una clase que es text- y esa clase text- no hace nada porque no existe. Entonces, no me está dando error. Jamás me va a dar un error, pero no me va a cambiar el color. Vale, fíjense, vengo al deep deep m pex esto. Okay, este container. Vamos a este. Fíjense en el H3. Fíjense en que tiene una clase que se llama, ¿cómo se llama la clase? ¿Lo ven allí? ¿Qué dice? Léemelo, Alberto, léeme esto. Text undefin. Textido, claro, le sumó, digamos, al text le sumó undefine porque resulta que ahí no existe color. En cambio, en la de abajo, ¿qué me dice? A ver, acá. Bien. Acá, ¿qué me dice? Giovanni Tex Danger. Claro, ya no me dice undefine. Y como esa clase sí existe, aplica lo que tenga esa clase. Tex Danger tiene todas estas cosas, ¿vale? En el otro, Tex and Define no existe, ¿vale? a nivel HTML, CSS, me da un error, no existe la clase, no puedo hacer nada, ya está el browser ni siquiera me da un warning con eso. Bien, pero ¿qué sucedería si yo desde el home le envío a este la clave color? Vale, igual. Y acá le vamos a poner info. Bien, me va me va a tomar una clase text info. Vamos a cambiarla así nos de arriba. Vale, me va a tomar una clase textas, con lo cual me va a mostrar un verde, ¿vale? Entonces, esta es una forma, se llaman props, de enviarle elementos a un componente. Es una forma que utilizábamos mucho hace un tiempo. Es una forma que actualmente casi no se utiliza, ¿vale? Está en desuso, ¿vale? No está obsoleta, pero está en desuso, porque hay otras formas más fáciles también de hacer todo esto, ¿vale? Pero es algo que también quiero que sepan para que mire, es más, en la práctica lo van a tener que aplicar porque es por ahora la primer forma que tienen de enviarle algo a un componente, ¿vale? Más adelante tendremos otra forma y es la que van a utilizar siempre, ¿vale? Preguntas. Vale, yo tengo una que ya lo vimos, ya lo vimos en la anterior clase, pero ahora mismo eh lo tengo un poco eh podemos volver a que estábamos en subtitle, creo. Es es sobre la forma de las, o sea, sobre el template literal. Eh, no recuerdo ahora mismo en qué momento utilizamos el, bueno, digámoslo así, el signo del dólar y en qué momento no, no recuerdo ahora bien bien. En el template literal, ¿vale?, usamos el dólar para poner algo de JavaScript, una expresión de JavaScript, al igual que en JSX usamos solamente las llaves, la función es la misma, la sintaxis es distinta, ¿vale? Pero acá yo puedo poner cualquier cosa que se resuelva en JavaScript. Te quiero dar un ejemplo. Vamos a poner acá un párrafo, ¿vale? Eh, un párrafo. Dame un párrafo. Okay. Un párrafo. Y acá en este párrafo yo escribo texto. Hola, soy el párrafo. Vale. Y acá voy a poner algo de JavaScript. Bien. ¿Qué puedo poner de JavaScript? Algo que se resuelva. Si yo pongo 5 = ig a 5, me va a mostrar un through. Hola, soy el párrafo through. A ver, no muestra nada. Me mató. Ah, mira tú. A ver. Eh, vale, no le resuelva la expresión. Ah, vale. Vamos a poner falta el signo del dólar. No, no. porque no porque estoy en React. Okay, pero acá le vamos a poner verdadero, coma dos puntos falso. Esto es una expresión, tiene razón porque la igualdad no es una expresión. Este no es un operador, un operador que ahí está devuelve verdadero. Esa es una expresión. Vale, otro ejemplo. Vamos a hacer, voy a copiar acá. Bien. Eh, otro ejemplo, ¿qué puedo devolver? algo que me resuelva una operación. Bien, decirle precisamente un 5 potencia eh de 3, creo que es 125, ¿verdad? 125 5³ 5 * 5 * 5. Algo que pueda resolver JavaScript me lo va a devolver, ¿vale? Es una expresión. El template literal es exactamente lo mismo, solamente que esto es para JSX y esto es para JavaScript. A ver, soy el párrafo, vamos a poder Soy, vamos a ver, vamos a hacer así. Soy un párrafo en JSX y resuelvo eh una expresión de JavaScript. Vale, ahí está. Esto va a ser lo mismo. Le voy a poner acá para que quede el ejemplo y les voy a dar después el ejemplo del template literal igual, ¿vale? Así este código también le queda. Fíjense que el subtitle no está sirviendo también para esto. ¿Vale? Bueno, esto es, vamos a poner acá resuelve. Dime, Féico, eh, la palabra proms que usamos en la función puede ser cualquier palabra o es prom. Eh, puede ser cualquier palabra, pero ahora te voy a mostrar, hay algo que nos falta ver qué pasa si tenemos una prop por defecto, ¿vale? Cuando tenemos prop por defecto, que es en un ratito, tiene que ser propi. Pero si yo le mando, le digo que va a recibir un objeto data y yo pongo acá data, lo va a tomar. Vale, voy a hacer el otro ejemplo. Acá resuelve expresiones eh de JavaScript eh a través de template literal. El template literal es de JavaScript. Template literal de JavaScript. Okay, todo eso lo pongo como comentario. Entonces, acá voy a poner un párrafo. Bien. Eh, y le pondré soy un párrafo eh en un template literal. Vale, para que este párrafo esté en un template literal, ¿vale?, yo tengo que hacer cumplir dos cosas. Primero ponerlo entre eh llaves porque voy a resolver un string y ponerle un string literal para JavaSam. JavaScript esto es una cadena, un string, por lo tanto está devolviendo un string. Vale, acá voy a poner otra más. Voy a poner otro para que esto se note. Este otro ejemplo. Acá voy a poner que devuelve [Aplausos] texto. ¿Qué me devuelve esta expresión de JavaScript? Un string, ¿vale? Un texto. Aquí está. Texto, ¿vale? ¿Qué me devuelve esto? Resuelve el operador ternario y me devuelve verdadero. ¿Vale? Acá vamos a poner e lo dejo así. Okay. Y esto queé me resuelve una operación matemática y me devuelve 125. Bien. Esto, ¿qué está haciendo? Me está resolviendo en JavaScript también texto, solamente que en lugar que entre comillas simples dentro de la comilla es del template literal, ¿vale? ¿Y qué me devuelve? Soy el template, soy un párrafo en un template literal. Y acá, como esto es JavaScript template literal, le puedo poner un peso llaves, ¿vale? Y también puedo poner, hola. Dentro del peso llave puedo poner cualquier cosa que me resuelva JavaScript, ¿verdad? Con lo cual vamos a resolver, vamos, voy a pegar lo mismo que tenía arriba, ¿vale? Bu, este. Y acá que pondré esta misma expresión. Vamos a hacer así. Y el minimap por ahora no me hace falta. Voy a copiar esto mismo porque esto puede estar dentro de aquellas llaves como dentro de estas llaves, ¿vale? y este que sería 5* potencia de 3. Va tranquilos con este ejemplo, ¿vale? Esta partecita del video la van a ver luego porque son las dos formas. Estoy haciendo lo mismo. De hecho, normalmente luego cuando avancen en R es muy probable que ya no utilicen más texto texto así, sino que utilicen algo de JavaScript acá dentro para escribir porque el texto viene dinámico de otro lado. Vale, atento. A menos que sea formulario, login, algo que va siempre igual, pero inclusive con el login, ¿vale? Si cambio de idiomas, puedo tener login o puedo tener ingresa, ingresa, ingresar, ¿vale? Todo puede ser dinámico. Bien, buena pregunta, Fernando. Eh, medio bastante los ejemplos, ¿vale? Tranquilo con este ejemplo, ya lo iré utilizando bastante, pero queda bien acá grabado y el ejemplo hecho. Vale, preguntas de esto, pequeño. Lleva ya media hora. ¿Cómo lleva ya media hora? Wow. Bueno, hago lo del prop default. A ver si lo tengo por allí. O sea, 2 minutos quedan, pero también por si acaso. Vale, déjame ver si tengo por acá, acá está la sintaxis. Okay. De hecho está con la card, pero no pasa nada. Lo vamos a hacer, de hecho, lo vamos a hacer en la card. Vamos a hacer en la card para que ese subtítulo quede así como está. Voy a hacer en la etiqueta card, ¿vale? Acá vamos a hacer lo mismo, vamos a vamos a recibir props, ¿vale? Entonces, ¿qué voy a hacer en esta etiqueta? Fíjense en que primero acá abajo voy a pegar lo que acabo de copiar. Bien, estoy definiendo este card.Prop prop type y me falta importar esto, ¿vale? Acá donde dice importo todo lo que me hace falta, bueno, resulta que comenzamos a importar algo. Les recuerdo que esta forma la vamos a utilizar poquito tiempo, luego vamos a utilizar otras para todo esto. Bien, voy a comentar los subtitle porque ahora sí se hicieron grandes, ¿vale? Pero están allí. Vale, bueno, y resulta que tengo esta card ahora definida con una props. ¿Y qué quisiera yo hacer acá? En lugar de primera card, ¿vale? Acá, por ejemplo, recibir una URL, bien, algo similar a lo que puse acá, pero sería esto propio. Bien, vamos a dejar acá que esto sea así. Esto lo voy a transformar en template literal, así no es tan grande. Vale, llave. Esto así y acá un template literal donde en realidad lo que voy a cambiar va a ser este numerito. Entonces, acá va a ser llaves. Bien, tac. Y acá le pondré props punid, por ejemplo, ¿vale? O sea, la imagen le voy a agregar un props.id. ¿Qué más voy a hacer? Vamos a poner el título en este car title le vamos a poner que quiero mostrar un props punto name. Bien, esto fíjense en que tiene que ser en JavaScript porque si no me está sucediendo esto, ¿vale? Eh, llaves. Eh, acá vamos a poner que esto va a ser un prop description. Vamos a hacer así. props about le voy a poner y acá nada. Estos son, ¿vale? Por ahora nada más. Bien, voy a definir acá abajo. Esto lo voy a borrar, esto no me hace falta ahora. Bien. Y acá abajo tengo title, que para mí el title era, ¿vale? Le vamos a poner title. Bien, description. Bueno, vamos con el description que ya está definido abajo. Texto del botón. Fíjese que estoy definiendo un texto para esto. Lo voy a definir también, ya que está allí abajo. Bien, llave va a ser props punto eh text button. Vale, ¿qué más tengo? Tengo el email URL que Vale, acá nos falta un ID. ID dos puntos y le voy a poner 10. por defecto. Ah, no, esto es prop, ¿eh? Vale, no, esto lo voy a dejar así, no pasa nada. Acá sí voy a poner en el default. Esto es lo que preguntaba recién este y es listo. Car title, car title, SCH, SCH. Miren que ya mostró tranquilamente mostró otra imagen. Vale, si cambio acá 12, ya van a ver qué sucede. Eh, le more image URL, image alt, ¿vale? en el alt también de la imagen, ¿vale? Lo voy a mostrar así en el Alt le voy a poner que muestre también el nombre slash props type. Listo, tengo todo eso definido. Bien, fíjense que la la CAR esta no se rompió porque yo acá tengo definido unos valores por defecto, un ID, un card title, aquí lo vamos a poner somebody. Bien, alguien ahí hay una descripción, el botón tiene un lermore y vale, está la car no está rota. Yo la estoy llamando desde home sin ningún sin ningún atributo. Vamos a llamar otra carta, ¿vale? Eh, slash. Vale. Y acá le voy a poner, fíjense que ahí ya me está creando la segunda carta. Bien, le voy a poner eh title es igual a Amanda. Bien. Y la segunda ya apareció con Amanda. Vale, le vamos a poner este el botón, la el ID para que me cambie de foto ID y le pondremos este cinco. Y fíjense que ya cambio de foto, ¿vale? Esta es la forma entonces de utilizar. Voy a hacer otra, ¿vale? slash card title. Le vamos a poner este, vamos a ponerle Valentina, ¿vale? ID 25, ¿vale? Slash. Cerramos ya esto. Y acá le pondremos description. Description. Fíjense que me puso ya llaves, solo me pone las llaves para que le ponga un texto dentro de las llaves. Okay. Y acá le pondremos full start, ¿vale? Y ahí tenemos Valentina full stack developer del mod. Entonces, todos estos atributos los puedo por ahora utilizar para enviarles datos a un componente que los recibe mediante props y los puede mostrar como como cosas. Esto era para definir qué tipo de datos podía recibir. Prop stream, prop stream. Yo estoy poniendo todas prop stream, ¿vale? Y acá fíjense que esto es el mismo nombre que tiene el componente card. default prop y pone un objeto donde pone todas las claves que utiliza y le pone un valor por defecto. Bien, si no le envío nada, entonces es somebody y toma el ID 12 y toma esta descripción. Bien, pregunta Arturo, si el default este hay que ponerlo siempre o se puede no poner. Si no lo pones, fíjate lo que va a pasar con la tarjeta un te lo comento allí. con esta precisamente que yo no le envié ningún dato. Wow. Bueno, se rompió o no. Ah, perdón, era la de arriba, no la estábamos viendo. Mira, la imagen rota no tiene nada. Amanda no tiene descripción y esto los botones no tienen, no dicen nada porque no tienen el default del text button. Claro, claro. No, era más que nada porque si por ejemplo le hubiéramos puesto también un props Amanda o lo que fuera la primera car como están las otras sí que se mostraría, ¿no? En el Samb. Claro. Sí, sí, pero resulta que yo no le puse nada. Vale, vale. Si le pongo title algo. Title bien. Eh, Irene, ahí está, ahí aparece porque sí se lo estoy enviando, pero si no se lo envío, defino los default para que no se rompa. Vale, somebody, vale, lo que sea. Acá puedo poner algo de Lorenims o lo que sea, en definitiva, para que algo no se me rompa. Vale, bueno, esta es la forma que van a usar para hacer el proyecto. Bien, ahí cortamos entonces la grabación.